-> git --version is used to check the verion of git installed 

->Configuring Git (Only once after installation)
    git config --global username "ArkaIshanBose" 
    git config --global email "arkaishanbose"
    git config --list (Used to show the list of changes)



Clone and status  -->

->Clone -> Cloning a Repository on our local machine (From github to our local system)
    git-clone link (HTTPS link) 

->Status->Display the state of the code
    git-status

{
    Github ->Remote
    Laptop ->local

}

->cd foldername->It is used to change the directory of the terminal
->cd .. is used to go back to the orignal directory.
->clear ->It is used to clear the terminal

git-status types->
->Untracked (U)-> New files that git doesnt track yet
->Modified (M)-> Files are changed 
->Staged -> Files are added and are ready to be committed (Engagement)
->Unmodified ->Unchanged 

Add & Commit ->
Adds new or changed files in your working directory to the github staging area -> git add filename
Commit is the record of change -> git commit -m "Some Message"

Push-> Push uploads local repo content (From Laptop) to the Remote repo (Github) -> git push origin main (Origin->Github , Main-Main branch)

Process->
1.  (changed / new file ) ->
2.  git add filename / git add . (For entire repo) (It gets staged(Engaged))->
3.  git commit -m "Some Message"
4.  git push origin main


{
    mkdir NewFolderName 
    It is used to make a new folder and its directory
}
{
    ls is used to see the list in the Github
    Get-ChildItem -Force is used to see the hidden list 
}


Now to create a New Git repo from Local 

git init ->

-> git remote add origin <link> (Git remote added)
-> git remote -v (TI Verify remote)
-> git branch (Is used to check the cuurent branch of our repo) -> Usually main
-> git branch -m "To rename Branch"
-> git push origin main
-> If we write 
    git push -u origin main

    Then from the next time, git push will be working , no need to write origin main anymore
